# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Meli Test Build Workflow

on: [push, pull_request]

jobs:
  build:
    name: Gradle build Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clean packages
        uses: ./.github/actions/packages
        with:
          token: ${{ secrets.GH_PACKAGES_TOKEN }}
          owner: ${{ github.actor }}
          repository: meli-mutants-api
          versions: 2
      - name: Setup JDK 1.8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8
      - name: Build with gradle
        run: gradle --build-cache build -x test
      - name: Publish to gitHub packages
        run: gradle publish
        env:
          GH_PACKAGES_USERNAME: ${{ github.actor }}
          GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
  deploy:
    name: Gradle Deploy Workflow
    runs-on: ubuntu-latest
    container:
      image: codehunters/gradle-awseb:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build with gradle
        run: |
          gradle --build-cache build -x test
        env:
          GH_PACKAGES_USERNAME: ${{ github.actor }}
          GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
      - name: Deploy to AWS
        run: |
          CURRENT_DATE=`date +%s`
          export AWSEB_RELEASE_VERSION="$APP_NAME-1.0.0-RELEASE-$CURRENT_DATE.jar"
          export LOCALDIR_RELEASE_VERSION="$GITHUB_WORKSPACE/mutants-api/build/libs/mutants-api-1.0.0.jar"
          awseb
        env:
          APP_NAME: meli-mutants-api
          AWSEB_APP_NAME: Meli Test
          AWSEB_ENV_NAME: meli-test-prod-env
          AWSEB_S3_BUCKET: codehuntersio-github-deployments
          AWSEB_S3_KEY: meli-mutants-api
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}